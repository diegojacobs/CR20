--
-- PostgreSQL database dump
--

-- Dumped from database version 9.2.14
-- Dumped by pg_dump version 9.2.14
<<<<<<< HEAD
-- Started on 2016-05-11 19:40:43
=======
-- Started on 2016-05-11 18:31:29
>>>>>>> refs/remotes/origin/master

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- TOC entry 175 (class 3079 OID 11727)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2000 (class 0 OID 0)
-- Dependencies: 175
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
<<<<<<< HEAD
-- TOC entry 191 (class 1255 OID 33490)
=======
-- TOC entry 188 (class 1255 OID 16793)
>>>>>>> refs/remotes/origin/master
-- Name: editar_cliente(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION editar_cliente() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.id IS NULL THEN
            RAISE EXCEPTION 'ID de Cliente no puede ser null';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.editar_cliente() OWNER TO postgres;

--
-- TOC entry 192 (class 1255 OID 33492)
-- Name: editar_cliente2(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION editar_cliente2() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.id in (select id from cliente) THEN
            RAISE EXCEPTION 'ID cliente ya existe';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.editar_cliente2() OWNER TO postgres;

--
-- TOC entry 193 (class 1255 OID 33494)
-- Name: editar_cliente3(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION editar_cliente3() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.location_id not in (select id from location) THEN
            RAISE EXCEPTION 'El id de direcci√≥n no hace referencia a ninguna direccion';
        END IF;
<<<<<<< HEAD
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.editar_cliente3() OWNER TO postgres;

--
-- TOC entry 194 (class 1255 OID 33496)
-- Name: editar_cliente4(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION editar_cliente4() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
=======
>>>>>>> refs/remotes/origin/master
        IF NEW.contacto_id not in (select id from contacto) THEN
            RAISE EXCEPTION 'El id de contacto no hace referencia a ningun contacto';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.editar_cliente4() OWNER TO postgres;

--
-- TOC entry 195 (class 1255 OID 33498)
-- Name: editar_cliente5(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION editar_cliente5() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.estado_id  not in (select id from estado) THEN
            RAISE EXCEPTION 'El id de estado no hace referencia a ningun estado';
        END IF;
        IF NEW.descuento < 0 THEN
            RAISE EXCEPTION 'No puede existir un descuento menor a 0';
        END IF;
	IF NEW.estado_civil_id not in (select id from estado_civil) THEN
            RAISE EXCEPTION 'El id de estado civil no hace referencia a ningun estado civil';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.editar_cliente5() OWNER TO postgres;

--
-- TOC entry 196 (class 1255 OID 33500)
-- Name: editar_venta(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION editar_venta() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.cliente_id NOT IN (SELECT id FROM cliente) THEN
            RAISE EXCEPTION 'El cliente no existe';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.editar_venta() OWNER TO postgres;

--
-- TOC entry 197 (class 1255 OID 33502)
-- Name: editar_venta2(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION editar_venta2() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.pago_id NOT IN (SELECT id FROM pago) THEN
            RAISE EXCEPTION 'El tipo de pago no existe';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.editar_venta2() OWNER TO postgres;

--
-- TOC entry 189 (class 1255 OID 33486)
-- Name: email(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION email() RETURNS trigger
    LANGUAGE plpgsql
    AS $_$
    BEGIN
        IF NEW.email not like '%@$.%' THEN
            RAISE EXCEPTION 'La cuenta de correo no es valida';
        END IF;
        RETURN NEW;
    END;
$_$;


ALTER FUNCTION public.email() OWNER TO postgres;

--
-- TOC entry 190 (class 1255 OID 33488)
-- Name: email2(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION email2() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.email in (select email from contacto where email<>''  ) THEN
            RAISE EXCEPTION 'La cuenta de correo ya existe';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.email2() OWNER TO postgres;

--
-- TOC entry 188 (class 1255 OID 33484)
-- Name: twitter(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION twitter() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        IF NEW.twitter in (SELECT twitter FROM contacto) THEN
            RAISE EXCEPTION 'La cuenta de twitter debe ser unica entre todos los clientes';
        END IF;
        RETURN NEW;
    END;
$$;


ALTER FUNCTION public.twitter() OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 168 (class 1259 OID 16794)
-- Name: cliente; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE cliente (
    id integer NOT NULL,
    primer_nombre text,
    segundo_nombre text,
    primer_apellido text,
    segundo_apellido text,
    fecha_de_nacimiento date,
    location_id integer,
    contacto_id integer,
    estado_id integer,
    descuento double precision,
    image text,
    genero boolean,
    estado_civil_id integer
);


ALTER TABLE public.cliente OWNER TO postgres;

--
-- TOC entry 169 (class 1259 OID 16800)
-- Name: contacto; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE contacto (
    id integer NOT NULL,
    telefono integer,
    email text,
    twitter text
);


ALTER TABLE public.contacto OWNER TO postgres;

--
-- TOC entry 170 (class 1259 OID 16806)
-- Name: estado; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE estado (
    id integer NOT NULL,
    descripcion text
);


ALTER TABLE public.estado OWNER TO postgres;

--
-- TOC entry 171 (class 1259 OID 16812)
-- Name: estado_civil; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE estado_civil (
    id integer NOT NULL,
    descripcion text
);


ALTER TABLE public.estado_civil OWNER TO postgres;

--
-- TOC entry 172 (class 1259 OID 16818)
-- Name: location; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE location (
    id integer NOT NULL,
    ciudad text,
    pais text,
    zipcode integer,
    direccion text
);


ALTER TABLE public.location OWNER TO postgres;

--
-- TOC entry 173 (class 1259 OID 16824)
-- Name: pago; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE pago (
    id integer NOT NULL,
    descripcion text
);


ALTER TABLE public.pago OWNER TO postgres;

--
-- TOC entry 174 (class 1259 OID 16830)
-- Name: venta; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE venta (
    id integer NOT NULL,
    pago_id integer,
    total double precision,
    cliente_id integer,
    dia date
);


ALTER TABLE public.venta OWNER TO postgres;

--
<<<<<<< HEAD
-- TOC entry 1986 (class 0 OID 33049)
=======
-- TOC entry 1968 (class 0 OID 16794)
>>>>>>> refs/remotes/origin/master
-- Dependencies: 168
-- Data for Name: cliente; Type: TABLE DATA; Schema: public; Owner: postgres
--

<<<<<<< HEAD
COPY cliente (id, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_de_nacimineto, location_id, contacto_id, estado_id, descuento, image, genero, estado_civil_id) FROM stdin;
1	Diego	Javier	Jacobs	Tercero	1995-05-09	1	1	1	0	c:/images/foto.png	t	2
=======
COPY cliente (id, primer_nombre, segundo_nombre, primer_apellido, segundo_apellido, fecha_de_nacimiento, location_id, contacto_id, estado_id, descuento, image, genero, estado_civil_id) FROM stdin;
1	Angel	Pancho	Morales	de Retolaza	1995-06-06	1	1	1	0.20000000000000001	C:\\\\Porno	t	1
>>>>>>> refs/remotes/origin/master
\.


--
<<<<<<< HEAD
-- TOC entry 1989 (class 0 OID 33081)
-- Dependencies: 171
=======
-- TOC entry 1969 (class 0 OID 16800)
-- Dependencies: 169
>>>>>>> refs/remotes/origin/master
-- Data for Name: contacto; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY contacto (id, telefono, email, twitter) FROM stdin;
<<<<<<< HEAD
6	30526044	diegojacobs@gmail.com	diegojacobs
1	30526044	diegojacobs9595@gmail.com	diegojacobs95
9	30526044	diego@gmail.com	diego
=======
1	54562123	jowy@gmail.com	jowyMorales
>>>>>>> refs/remotes/origin/master
\.


--
<<<<<<< HEAD
-- TOC entry 1987 (class 0 OID 33065)
-- Dependencies: 169
=======
-- TOC entry 1970 (class 0 OID 16806)
-- Dependencies: 170
>>>>>>> refs/remotes/origin/master
-- Data for Name: estado; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY estado (id, descripcion) FROM stdin;
1	Activo
\.


--
<<<<<<< HEAD
-- TOC entry 1992 (class 0 OID 33277)
-- Dependencies: 174
=======
-- TOC entry 1971 (class 0 OID 16812)
-- Dependencies: 171
>>>>>>> refs/remotes/origin/master
-- Data for Name: estado_civil; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY estado_civil (id, descripcion) FROM stdin;
1	Casado
\.


--
<<<<<<< HEAD
-- TOC entry 1988 (class 0 OID 33073)
-- Dependencies: 170
=======
-- TOC entry 1972 (class 0 OID 16818)
-- Dependencies: 172
>>>>>>> refs/remotes/origin/master
-- Data for Name: location; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY location (id, ciudad, pais, zipcode, direccion) FROM stdin;
<<<<<<< HEAD
1	Guatemala	Guatemala	1016	Zona 16
=======
1	Xela	Guatemala	1730	null
2	Guatemala	Guatemala	1111	La Sexta
>>>>>>> refs/remotes/origin/master
\.


--
<<<<<<< HEAD
-- TOC entry 1990 (class 0 OID 33094)
-- Dependencies: 172
=======
-- TOC entry 1973 (class 0 OID 16824)
-- Dependencies: 173
>>>>>>> refs/remotes/origin/master
-- Data for Name: pago; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY pago (id, descripcion) FROM stdin;
1	Tarjeta de Credito
2	Efectivo
3	Sexo
4	Fichas
\.


--
<<<<<<< HEAD
-- TOC entry 1991 (class 0 OID 33257)
-- Dependencies: 173
=======
-- TOC entry 1974 (class 0 OID 16830)
-- Dependencies: 174
>>>>>>> refs/remotes/origin/master
-- Data for Name: venta; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY venta (id, pago_id, total, cliente_id, dia) FROM stdin;
<<<<<<< HEAD
1	1	12.5	1	3916-01-30
=======
1	4	20	1	2016-05-09
2	3	0	1	2016-05-09
3	3	0	1	2016-05-01
4	1	5	1	2016-03-20
>>>>>>> refs/remotes/origin/master
\.


--
<<<<<<< HEAD
-- TOC entry 1849 (class 2606 OID 33056)
=======
-- TOC entry 1840 (class 2606 OID 16834)
>>>>>>> refs/remotes/origin/master
-- Name: cliente_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_pkey PRIMARY KEY (id);


--
<<<<<<< HEAD
-- TOC entry 1855 (class 2606 OID 33306)
=======
-- TOC entry 1842 (class 2606 OID 16836)
>>>>>>> refs/remotes/origin/master
-- Name: contact_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY contacto
    ADD CONSTRAINT contact_email_key UNIQUE (email);


--
<<<<<<< HEAD
-- TOC entry 1857 (class 2606 OID 33088)
=======
-- TOC entry 1844 (class 2606 OID 16838)
>>>>>>> refs/remotes/origin/master
-- Name: contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY contacto
    ADD CONSTRAINT contact_pkey PRIMARY KEY (id);


--
<<<<<<< HEAD
-- TOC entry 1863 (class 2606 OID 33284)
=======
-- TOC entry 1848 (class 2606 OID 16840)
>>>>>>> refs/remotes/origin/master
-- Name: estado_civil_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY estado_civil
    ADD CONSTRAINT estado_civil_pkey PRIMARY KEY (id);


--
<<<<<<< HEAD
-- TOC entry 1853 (class 2606 OID 33080)
=======
-- TOC entry 1850 (class 2606 OID 16842)
>>>>>>> refs/remotes/origin/master
-- Name: location_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY location
    ADD CONSTRAINT location_pkey PRIMARY KEY (id);


--
<<<<<<< HEAD
-- TOC entry 1859 (class 2606 OID 33101)
=======
-- TOC entry 1852 (class 2606 OID 16844)
>>>>>>> refs/remotes/origin/master
-- Name: pago_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY pago
    ADD CONSTRAINT pago_pkey PRIMARY KEY (id);


--
<<<<<<< HEAD
-- TOC entry 1851 (class 2606 OID 33072)
=======
-- TOC entry 1846 (class 2606 OID 16846)
>>>>>>> refs/remotes/origin/master
-- Name: state_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY estado
    ADD CONSTRAINT state_pkey PRIMARY KEY (id);


--
<<<<<<< HEAD
-- TOC entry 1861 (class 2606 OID 33261)
=======
-- TOC entry 1854 (class 2606 OID 16848)
>>>>>>> refs/remotes/origin/master
-- Name: venta_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY venta
    ADD CONSTRAINT venta_pkey PRIMARY KEY (id);


--
<<<<<<< HEAD
-- TOC entry 1870 (class 2620 OID 33491)
=======
-- TOC entry 1861 (class 2620 OID 16849)
>>>>>>> refs/remotes/origin/master
-- Name: editarcliente; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcliente BEFORE INSERT OR UPDATE ON cliente FOR EACH ROW EXECUTE PROCEDURE editar_cliente();


--
<<<<<<< HEAD
-- TOC entry 1871 (class 2620 OID 33493)
-- Name: editarcliente2; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcliente2 BEFORE INSERT OR UPDATE ON cliente FOR EACH ROW EXECUTE PROCEDURE editar_cliente2();


--
-- TOC entry 1872 (class 2620 OID 33495)
-- Name: editarcliente3; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcliente3 BEFORE INSERT OR UPDATE ON cliente FOR EACH ROW EXECUTE PROCEDURE editar_cliente3();


--
-- TOC entry 1873 (class 2620 OID 33497)
-- Name: editarcliente4; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcliente4 BEFORE INSERT OR UPDATE ON cliente FOR EACH ROW EXECUTE PROCEDURE editar_cliente4();


--
-- TOC entry 1874 (class 2620 OID 33499)
-- Name: editarcliente5; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcliente5 BEFORE INSERT OR UPDATE ON cliente FOR EACH ROW EXECUTE PROCEDURE editar_cliente5();


--
-- TOC entry 1875 (class 2620 OID 33485)
-- Name: editarcontacto; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcontacto BEFORE INSERT OR UPDATE ON contacto FOR EACH ROW EXECUTE PROCEDURE twitter();


--
-- TOC entry 1876 (class 2620 OID 33487)
-- Name: editarcontactoemail; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcontactoemail BEFORE INSERT OR UPDATE ON contacto FOR EACH ROW EXECUTE PROCEDURE email();


--
-- TOC entry 1877 (class 2620 OID 33489)
-- Name: editarcontactoemail2; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarcontactoemail2 BEFORE INSERT OR UPDATE ON contacto FOR EACH ROW EXECUTE PROCEDURE email2();


--
-- TOC entry 1878 (class 2620 OID 33501)
-- Name: editarventa; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarventa BEFORE INSERT OR UPDATE ON venta FOR EACH ROW EXECUTE PROCEDURE editar_venta();


--
-- TOC entry 1879 (class 2620 OID 33503)
-- Name: editarventa2; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER editarventa2 BEFORE INSERT OR UPDATE ON venta FOR EACH ROW EXECUTE PROCEDURE editar_venta2();


--
-- TOC entry 1864 (class 2606 OID 33407)
=======
-- TOC entry 1855 (class 2606 OID 16880)
>>>>>>> refs/remotes/origin/master
-- Name: cliente_contacto_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_contacto_id_fkey FOREIGN KEY (contacto_id) REFERENCES contacto(id);


--
<<<<<<< HEAD
-- TOC entry 1865 (class 2606 OID 33412)
=======
-- TOC entry 1856 (class 2606 OID 16885)
>>>>>>> refs/remotes/origin/master
-- Name: cliente_estado_civil_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_estado_civil_id_fkey FOREIGN KEY (estado_civil_id) REFERENCES estado_civil(id);


--
<<<<<<< HEAD
-- TOC entry 1866 (class 2606 OID 33417)
=======
-- TOC entry 1857 (class 2606 OID 16890)
>>>>>>> refs/remotes/origin/master
-- Name: cliente_estado_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_estado_id_fkey FOREIGN KEY (estado_id) REFERENCES estado(id);


--
<<<<<<< HEAD
-- TOC entry 1867 (class 2606 OID 33422)
=======
-- TOC entry 1858 (class 2606 OID 16895)
>>>>>>> refs/remotes/origin/master
-- Name: cliente_location_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_location_id_fkey FOREIGN KEY (location_id) REFERENCES location(id);


--
<<<<<<< HEAD
-- TOC entry 1868 (class 2606 OID 33504)
=======
-- TOC entry 1859 (class 2606 OID 16900)
>>>>>>> refs/remotes/origin/master
-- Name: venta_cliente_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY venta
    ADD CONSTRAINT venta_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES cliente(id);


--
<<<<<<< HEAD
-- TOC entry 1869 (class 2606 OID 33509)
=======
-- TOC entry 1860 (class 2606 OID 16905)
>>>>>>> refs/remotes/origin/master
-- Name: venta_pago_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY venta
    ADD CONSTRAINT venta_pago_id_fkey FOREIGN KEY (pago_id) REFERENCES pago(id);


--
<<<<<<< HEAD
-- TOC entry 1999 (class 0 OID 0)
-- Dependencies: 5
=======
-- TOC entry 1981 (class 0 OID 0)
-- Dependencies: 6
>>>>>>> refs/remotes/origin/master
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


<<<<<<< HEAD
-- Completed on 2016-05-11 19:40:44
=======
-- Completed on 2016-05-11 18:31:32
>>>>>>> refs/remotes/origin/master

--
-- PostgreSQL database dump complete
--

